create schema ctr;
CREATE TABLE CTR.C_REPO (
code						INT	COMMENT "code returned by pig validation udf",
TRADE_ID					STRING,
PRODUCT_TYPE				STRING,
TRANSACTION_TYPE			STRING,
BOOKING_POINT				STRING,
BUSINESS_UNIT_NAME			STRING,
GL_ACCOUNT					STRING,
PL_CURRENCY					STRING,
PL_GL_ACCOUNT				STRING,
EGL_DEPARTMENT				STRING,
EGL_LOCATION				STRING,
PORTFOLIO_ID				STRING,
TRADING						BOOLEAN,
CARDS_ID					STRING,
COUNTERPARTY_ID				STRING,
COUNTERPART_BRANCH_ID		STRING,
Counterparty_Branch_Jurisdiction_ID	STRING,
TRANSIT_NUMBER				STRING,
INTERNAL_DEAL				BOOLEAN,
FACILITY_ID					STRING,
NET_AGREEMENT				STRING,
OWN_ENTITY_ID				STRING,
BUY_SELL					STRING,
CURRENCY					STRING,
DVP							STRING,
START_DATE					DATE,
MATURITY_DATE				DATE,
OPEN_REPO					BOOLEAN,
ORIGINAL_CASH				DOUBLE,
REPO_RATE					DOUBLE,
SECURITY_ID					STRING,
SECURITY_ID_TYPE			STRING,
QUANTITY					INT,
FIXED_RATE_REPO				BOOLEAN,
DAY_COUNT_BASIS				STRING,
FIXING_FREQUENCY			STRING,
FIXING_HOLIDAY				STRING,
FLOATING_INDEX				STRING,
SP_WR_RISK					BOOLEAN,
SETTLEMENT_CURRENCY			STRING,
REPO_ROLL_FLAG				BOOLEAN,
REPO_ROLL_GROUP_ID			STRING,
REP_ROLL_LST_CASH_FLOW_DATE	DATE
);


CREATE TABLE CTR.M_REPO_Lancelot (
BankingBookQualifyingFlag 		BOOLEAN COMMENT "Banking Book Qualifying Flag",
BookID							STRING COMMENT "Book ID",
BookingPointID					STRING COMMENT "Booking Point ID",
BusinessUnitName				STRING COMMENT "Business Unit Name",
Buy_Sell						STRING COMMENT "Buy/Sell",
EntityID						STRING COMMENT "Entity ID",
CounterpartyBranchId			STRING COMMENT "Counterparty Branch Id",
CounterpartyBranchJurisdictionID	STRING COMMENT "Counterparty Branch Jurisdiction ID",
CounterpartyLongName			STRING COMMENT "Counterparty Long Name",
CTRrunstamp						STRING COMMENT "CTR run stamp",
eGLDepartment					STRING COMMENT "eGL Department",
eGLLocation						STRING COMMENT "eGL Location",
eGLNotionalAccount				DOUBLE COMMENT "eGL Notional Account",
GLNotionalAccount				DOUBLE COMMENT "GL Notional Account",
GLNotionalAmount				DOUBLE COMMENT "GL Notional Amount",
GLNotionalCurrency				STRING COMMENT "GL Notional Currency",
InternalCounterpartyFlag		BOOLEAN COMMENT "Internal Counterparty Flag",
Investment_TradingFlag			STRING COMMENT "Investment/Trading Flag",
LastCashflowDATE				DATE COMMENT "Last Cashflow DATE",
MaturityDATE					DATE COMMENT "Maturity DATE",
MTM_TradePackageMTM				DOUBLE COMMENT "MTM / Trade Package MTM",
MTMCurrency_TradePackageMTMCurrency	STRING COMMENT "MTM Currency / Trade Package MTM Currency",
OpenRepoFlag					BOOLEAN COMMENT "Open Repo Flag",
Optionright						STRING COMMENT "Option right",
OriginalCash					DOUBLE COMMENT "Original Cash",
OriginalCashCurrency			STRING COMMENT "Original Cash Currency",
OwnentityID						STRING COMMENT "Own entity ID",
MTMCurrency						STRING COMMENT "MTM Currency",
MTMeGLAccount					STRING COMMENT "MTM eGL Account",
MTMGLAccount					STRING COMMENT "MTM GL Account",
RemainingUnpaidpremiums			DOUBLE COMMENT "Remaining Unpaid premiums",
RemainingUnpaidpremiumsccy		STRING COMMENT "Remaining Unpaid premiums ccy",
RepoRate						DOUBLE COMMENT "Repo Rate",
RepoRollFlag					BOOLEAN COMMENT "Repo Roll Flag ",
RepoRollGroupID					STRING COMMENT "Repo Roll Group ID ",
RepoRollLastCashflowDATE		DATE COMMENT "Repo Roll Last Cashflow DATE ",
ResetDATEs						DATE COMMENT "Reset DATEs",
ROAssetClass					STRING COMMENT "RO Asset Class ",
ROProductType					STRING COMMENT "RO Product Type",
ROProductUnderlying				STRING COMMENT "RO Product Underlying ",
SecuritiesBorrowedAmount		DOUBLE COMMENT "Securities Borrowed Amount",
SecuritiesBorrowedAmountCurrency	STRING COMMENT "Securities Borrowed Amount Currency",
SecuritiesLendingAmount			DOUBLE COMMENT "Securities Lending Amount",
SecuritiesLendingAmountCurrency	STRING COMMENT "Securities Lending Amount Currency",
SettlementCurrency				STRING COMMENT "Settlement Currency",
SettlementType					STRING COMMENT "Settlement Type",
SourceSystem					STRING COMMENT "Source System",
SpecificWrongWayRiskFlag		BOOLEAN COMMENT "Specific Wrong Way Risk Flag",
StartDATE						DATE COMMENT "Start DATE",
TradeID							STRING COMMENT "Trade ID",
TradePackageID					STRING COMMENT "Trade Package ID",
TradePackageNotional			DOUBLE COMMENT "Trade Package Notional",
TradePackageNotionalCurrency	STRING COMMENT "Trade Package Notional Currency",
TransactionType					STRING COMMENT "Transaction Type",
TransitNumber					STRING COMMENT "Transit Number",
UnderlyingInstrumentID			STRING COMMENT "Underlying Instrument ID",
UnderlyingInstrumentType		STRING COMMENT "Underlying Instrument Type",
UnderlyingInstrumentUnits		INT COMMENT "Underlying Instrument Units",
ValuationDATE					DATE COMMENT "Valuation DATE",
ValuationMethod					STRING COMMENT "Valuation Method",
PayCurrency						STRING COMMENT "Pay Currency",
ReceiveCurrency					STRING COMMENT "Receive Currency",
PayNotional						DOUBLE COMMENT "Pay Notional",
ReceiveNotional					DOUBLE COMMENT "Receive Notional",
PayGLAccount					STRING COMMENT "Pay GL Account",
OpenSBLFlag						BOOLEAN COMMENT "Open SBL Flag???"
);

INSERT OVERWRITE TABLE CTR.M_REPO_Lancelot SELECT 
null, 
PORTFOLIO_ID, 
BOOKING_POINT, 
BUSINESS_UNIT_NAME, 
BUY_SELL, 
COUNTERPARTY_ID, 
COUNTERPART_BRANCH_ID, 
Counterparty_Branch_Jurisdiction_ID, 
null, 
to_date(FROM_UNIXTIME(UNIX_TIMESTAMP())), 
EGL_DEPARTMENT, 
EGL_LOCATION, 
null, 
GL_ACCOUNT, 
PL_GL_ACCOUNT, 
PL_CURRENCY, 
INTERNAL_DEAL, 
TRADING, 
MATURITY_DATE, 
MATURITY_DATE, 
null, 
null, 
OPEN_REPO, 
"",
ORIGINAL_CASH, 
CURRENCY, 
OWN_ENTITY_ID, 
null, 
null, 
null, 
null, 
"", 
REPO_RATE, 
REPO_ROLL_FLAG, 
REPO_ROLL_GROUP_ID, 
REP_ROLL_LST_CASH_FLOW_DATE, 
null, 
"", 
"", 
"", 
null, 
null, 
null, 
null, 
CURRENCY, 
"", 
"Anvil FI - TOR", 
false, 
START_DATE, 
TRADE_ID, 
"", 
null, 
"", 
TRANSACTION_TYPE, 
TRANSIT_NUMBER, 
SECURITY_ID, 
null, 
QUANTITY, 
null, 
"BNS Repo", 
"", 
"", 
null, 
null, 
"", 
null 
FROM CTR.C_REPO;

